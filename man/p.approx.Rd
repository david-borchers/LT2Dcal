% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2DLTfunctions mixture.r
\name{p.approx}
\alias{p.approx}
\title{Calculates perp. dist. detection function approximation}
\usage{
p.approx(y, x, h.fun, b, what = "px")
}
\arguments{
\item{y}{Forward distance integration points}

\item{x}{perpendicular distances at which detection probability is to be calculated}

\item{h.fun}{The hazard function (either a function or a character variable of the function name)}

\item{b}{parameter vector for hazard function \code{h.fun}.}

\item{what}{Determines what is returned: 'fxy' results in the pdf of y, given x being returned, 
'pxy' results in the probability of detection by each y being returned, 'px' results in the 
probability of detection at all for each x being returned. Anything else results in 
all three of these being returned.}
}
\value{
If \code{what} is 'fxy', a matrix containing the pdf of y, for each x (matrix row) is 
returned. If 'pxy' a matrix with the probability of detection by each y for each x (matrix row) 
is returned. If 'px' a vector comprising the probability of detection at all for each x is 
returned. Anything else results in a list with all three of these being returned, in elements 
\code{$fmat}, \code{$pmat}, and \code{p}, respectively .
}
\description{
Uses Simpsons 1/3 rule to integrate the specified hazard function \code{h.fun} 
from \code{ystart} to 0, at every x-value in \code{xs}, using the y-values in \code{ys} as the 
integration points. Then calculates detection probability at each x as 1 - exp(-h.int), 
where h.int is this integral at each of the given x-values.
}
\examples{
xs = seq(0,w,length=100)
ys = seq(0,ystart,length=100)
h.fun.name = "h1"
b=c(-7.3287948, 0.9945317)
h.fun = match.fun(h.fun.name) # make h.fun the function specified via a character variable
p.vals = p.approx(ys,xs,h.fun,b) # detection function values to plot
plot(ys,p.vals,type='l',xlab='Perp. distance, x',ylab=expression(p(x)))

}
